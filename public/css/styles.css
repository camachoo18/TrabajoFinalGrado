/* === CSS RESET (Basic) === */
*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html {
    font-size: 16px; /* Base font size */
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    scroll-behavior: smooth;
}

/* === COLOR & FONT VARIABLES === */
:root {
    --primary-color: #0077B6;       /* Ocean Blue - Primary actions, links */
    --primary-darker: #005A8D;    /* Darker blue for hover or active states */
    --primary-lighter: #6CBDE8;   /* Lighter blue for accents or backgrounds */
    
    --secondary-color: #495057;     /* Neutral Gray - Secondary buttons, borders */
    --secondary-darker: #343A40;  /* Darker Gray */
    --secondary-lighter: #ADB5BD; /* Lighter Gray */

    --accent-color: #FFC107;        /* Warm Yellow/Gold - Calls to action, highlights */
    --accent-darker: #E0A800;

    --success-main: #28A745;        /* Green for success messages */
    --success-bg: #D4EDDA;
    --success-text: #155724;
    --danger-main: #DC3545;         /* Red for error messages */
    --danger-darker: #BD2130;     /* Darker Red for hover states */
    --danger-bg: #F8D7DA;
    --danger-text: #721C24;
    --warning-main: #FFC107;       /* Yellow for warnings */
    --warning-bg: #FFF3CD;
    --warning-text: #856404;
    --info-main: #17A2B8;          /* Teal/Info Blue for informational messages */
    --info-darker: #117A8B;       /* Darker Teal/Info Blue for hover states */
    --info-bg: #D1ECF1;
    --info-text: #0C5460;

    --background-body: #E9ECEF;   /* Light Gray - Main page background */
    --background-main: #F0F4F8;    /* Slightly bluer light grey for main content areas */
    --background-card: #FFFFFF;   /* White - Card backgrounds */
    --text-primary: #212529;      /* Dark gray for primary text */
    --text-secondary: #495057;    /* Lighter gray for secondary text */
    --text-muted: #6C757D;        /* Muted text */
    --border-color: #CED4DA;      /* Standard border color */
    --border-color-light: #E9ECEF; /* Lighter border for subtle divisions */

    --font-family-sans-serif: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    --font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;

    --body-font-size: 1rem;
    --body-line-height: 1.6;

    --border-radius: 0.375rem;      /* Base border radius */
    --border-radius-sm: 0.25rem;    /* Small border radius */
    --border-radius-lg: 0.5rem;     /* Large border radius */

    --card-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    --card-shadow-light: 0 2px 6px rgba(0, 0, 0, 0.07);
    --card-max-width: 900px;         /* Max width for general content cards */
    --card-max-width-lg: 1200px;    /* Max width for wider content cards, like tables */

    --navbar-height: 60px; /* Adjust as needed */
}

/* === GLOBAL STYLES === */
body {
    font-family: var(--font-family-sans-serif);
    background-color: var(--background-main);
    color: var(--text-main);
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

a {
    color: var(--link-color);
    text-decoration: none;
    transition: color 0.15s ease-in-out;
}

a:hover {
    color: var(--link-hover-color);
    text-decoration: underline;
}

img, svg {
    vertical-align: middle;
}

/* === NAVBAR === */
.navbar {
    background-color: var(--navbar-bg);
    color: var(--navbar-text);
    padding: 0.75rem 1.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1030; /* High z-index for navbar */
    box-shadow: var(--shadow);
}

.navbar-auth {
    justify-content: center; /* Center brand title if it's the only child */
}

.navbar .brand-title {
    font-size: 1.6rem;
    font-weight: 700;
    color: var(--navbar-text);
    text-decoration: none;
}

.navbar .brand-title:hover {
    color: var(--accent-color);
}

.navbar .user-info {
    display: flex;
    align-items: center;
    gap: 1rem;
}

#userEmailDisplay {
    font-size: 0.9rem;
    color: var(--navbar-text);
}

.navbar .nav-button, /* For logout button if it's a button */
.navbar a.nav-link-button {
    color: var(--navbar-text);
    background-color: var(--primary-color);
    padding: 0.4rem 0.8rem;
    border-radius: var(--border-radius);
    text-decoration: none;
    font-weight: 500;
    border: 1px solid var(--primary-color);
    transition: background-color 0.2s ease, border-color 0.2s ease;
}

.navbar .nav-button:hover,
.navbar a.nav-link-button:hover {
    background-color: var(--primary-darker);
    border-color: var(--primary-darker);
    color: var(--navbar-text);
    text-decoration: none;
}

/* === MAIN CONTENT CONTAINER === */
.main-container {
    padding-top: 70px; /* Adjust based on actual navbar height, calculate from padding + font size */
    width: 100%;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-bottom: 2rem;
}

/* === CONTENT CARD === */
.content-card {
    background-color: var(--background-card);
    padding: 1.5rem 2rem;
    border-radius: var(--border-radius-lg);
    box-shadow: var(--card-shadow);
    width: 100%;
    max-width: var(--card-max-width); /* Default max width */
    margin-top: 2rem; /* Space from navbar or previous card */
    margin-bottom: 1rem;
}

.content-card-lg {
    max-width: var(--card-max-width-lg);
}

.auth-card {
    max-width: 450px; /* Max width for login/register forms */
    margin-left: auto;
    margin-right: auto;
}

.content-card h1, .content-card h2, .content-card h3 {
    color: var(--primary-darker);
    margin-bottom: 1.25rem;
    font-weight: 600;
    text-align: center;
}

/* === BUTTONS === */
.btn {
    display: inline-block;
    font-weight: 500;
    color: var(--text-light);
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    user-select: none;
    background-color: var(--primary-color);
    border: 1px solid var(--primary-color);
    padding: 0.6rem 1.2rem;
    font-size: 1rem;
    line-height: 1.5;
    border-radius: var(--border-radius);
    transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
    text-decoration: none;
}

.btn:hover {
    background-color: var(--primary-darker);
    border-color: var(--primary-darker);
    color: var(--text-light);
    text-decoration: none;
}

.btn:focus, .btn.focus {
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(var(--primary-color-rgb, 0, 119, 182), 0.5); /* Fallback RGB for --primary-color */
}

.btn-secondary {
    color: var(--text-main);
    background-color: var(--background-main);
    border-color: var(--border-color);
}

.btn-secondary:hover {
    background-color: var(--border-color);
    color: var(--text-main);
}

.btn-lg {
    padding: 0.75rem 1.5rem;
    font-size: 1.1rem;
    border-radius: var(--border-radius-lg);
}

.btn-sm {
    padding: 0.25rem 0.5rem;
    font-size: 0.875rem;
    border-radius: var(--border-radius-sm);
}

.button-group {
    display: flex;
    gap: 0.75rem;
    justify-content: center; /* Default, can be overridden */
    margin-top: 1.5rem;
    flex-wrap: wrap; /* Allow buttons to wrap on smaller screens */
}

/* === INFO BUTTON === */
.btn-info {
    color: #fff;
    background-color: var(--info-main); /* var(--info-main) is #17A2B8 (Teal/Info Blue) */
    border-color: var(--info-main);
}
.btn-info:hover {
    background-color: var(--info-darker);
    border-color: var(--info-darker);
}

/* === DANGER BUTTON === */
.btn-danger {
    color: #fff;
    background-color: var(--danger-main); /* var(--danger-main) is #DC3545 (Red) */
    border-color: var(--danger-main);
}
.btn-danger:hover {
    background-color: var(--danger-darker);
    border-color: var(--danger-darker);
}

.btn-light {
    color: var(--text-main);
    background-color: var(--background-main);
    border-color: var(--border-color);
}

/* === FORMS === */
.form-group {
    margin-bottom: 1.25rem;
}

.form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: var(--text-secondary);
}

.form-control {
    display: block;
    width: 100%;
    padding: 0.6rem 0.9rem;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: var(--text-main);
    background-color: var(--card-bg);
    background-clip: padding-box;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
}

.form-control:focus {
    border-color: var(--accent-color);
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(72, 202, 228, 0.25); /* Hardcoded RGB for --accent-color */
}

select.form-control {
    /* Add specific styles for select if needed, often defaults are fine */
    appearance: none; /* Basic custom arrow might be needed */
}

/* === TABLES === */
.table-responsive {
    display: block;
    width: 100%;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    margin-top: 1rem;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
}

table {
    width: 100%;
    margin-bottom: 1rem;
    color: var(--text-main); /* Text color within tables */
    border-collapse: collapse; /* Ensure borders collapse correctly */
}

th,
td {
    padding: 0.75rem; /* Padding for table cells */
    vertical-align: top;
    border-top: 1px solid var(--border-color); /* Border for table cells */
}

thead th {
    vertical-align: bottom;
    border-bottom: 2px solid var(--border-color-dark, var(--border-color)); /* Darker border for header bottom */
    font-weight: 600;
    background-color: var(--background-body); /* Slight background for header */
}

tbody tr:hover {
    background-color: rgba(0,0,0,.05); /* Hover effect for rows */
}

/* === FEEDBACK MESSAGES === */
.feedback-container-stack {
    position: fixed;
    top: 20px; /* Distance from the top of the viewport */
    left: 50%;
    transform: translateX(-50%); /* Center the container */
    z-index: 1050; /* Ensure it's above other content */
    display: flex;
    flex-direction: column;
    align-items: center; /* Center messages within the stack */
    gap: 0.75rem; /* Space between stacked messages */
    width: auto; /* Let content define width, up to a max */
    max-width: 500px; /* Max width for these top messages */
}

.feedback-container-stack .feedback-message {
    position: relative; /* Not fixed, positioned by the stack */
    width: 100%; /* Take full width of the stack container */
    /* Animation is already handled by .feedback-message and .active */
}

.feedback-message {
    min-width: 280px; /* Minimum width for feedback messages */
    max-width: 450px; /* Make message boxes a bit smaller */
    padding: 1rem 1.5rem;
    border-radius: var(--border-radius);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    display: flex; /* Changed to flex for internal alignment */
    align-items: center; /* Vertically align icon/text if any */
    gap: 1rem; /* Space between icon/text */
    z-index: 1000;

    /* Animation properties */
    opacity: 0;
    transform: translateY(-20px); /* Start slightly higher for slide-down from top */
    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
}

/* When active/shown, animate to this state */
.feedback-message.active {
    opacity: 1;
    transform: translateY(0);
}

/* Styles for centered feedback cards (e.g., login, logout) */
.feedback-message.feedback-card-centered {
    position: fixed; /* THIS is where fixed positioning is defined for centered cards */
    top: 50%;
    left: 50%;
    bottom: auto; 
    right: auto; 
    /* Initial transform for centered card: centered AND offset for slide-in from top */
    transform: translate(-50%, -50%) translateY(-20px); 
}

/* When a centered card is active/shown, animate to this state */
.feedback-message.feedback-card-centered.active {
    opacity: 1;
    /* Centered and at its final Y position */
    transform: translate(-50%, -50%) translateY(0);
}

/* Feedback message types (success, error, info, loading) */
.feedback-message.feedback-success {
    background-color: var(--success-bg);
    color: var(--success-text);
    border-left-color: var(--success-main);
}

.feedback-message.feedback-error {
    background-color: var(--danger-bg);
    color: var(--danger-text);
    border-left-color: var(--danger-main);
}

.feedback-message.feedback-info {
    background-color: var(--info-bg);
    color: var(--info-text);
    border-left-color: var(--info-main);
}

/* Style for confirmation messages (e.g., delete confirmation) */
.feedback-message.feedback-confirmation {
    background-color: var(--background-card); /* Use a solid card background */
    color: var(--text-primary);
    border-left-color: var(--warning-main); /* Use warning color for the border, or primary */
}

/* Specific styling for the loading message card */
.feedback-message.feedback-loading {
    background-color: var(--background-card); /* Card background */
    color: var(--text-secondary); /* Text color for loading message */
    border-left-color: var(--primary-lighter); /* Optional: or remove if no side border desired */
    /* Override flex direction to stack text and spinner */
    flex-direction: column; /* Stack children (text and spinner) */
    justify-content: center; /* Center them along the column */
    align-items: center; /* Center them cross-axis */
    gap: 1rem; /* Space between text and spinner */
    text-align: center; /* Ensure text itself is centered if it wraps */
}

/* Override for text content specifically in loading messages to take natural height */
.feedback-message.feedback-loading .feedback-text-content {
    flex-grow: 0; /* Do not grow, just take natural height of text */
    display: block; /* Ensure it behaves as a block element */
    color: var(--text-secondary); /* Explicitly set text color */
    /* Add some margin if needed, e.g., margin-bottom: 0.5rem; if gap on parent isn't enough */
}

.feedback-message.feedback-loading .spinner {
    width: 30px; /* Adjust size as needed for the card */
    height: 30px;
    border-width: 3px; /* Adjust border thickness */
    margin: 0; /* Remove any specific margins like margin-right if it was for inline use */
}

.feedback-actions {
    margin-left: 1rem; /* Space between message text and buttons */
    display: flex;
    gap: 0.5rem;
}

/* Spinner (if not already globally defined) */
.spinner {
    display: inline-block; /* Allows it to sit with text if needed, or be centered if block with auto margins */
    border: 4px solid var(--border-color-light, #f3f3f3); /* Light grey for the track */
    border-top: 4px solid var(--primary-color); /* Blue for the loading part */
    border-radius: 50%;
    width: 40px; /* Default size, can be overridden by more specific selectors */
    height: 40px;
    animation: spin 0.8s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* === LOGOUT PAGE SPECIFIC STYLES === */
body.logout-page-body {
    justify-content: center; /* Center content vertically for logout page */
    align-items: center; /* Center content horizontally for logout page */
    padding-top: 0; /* Override main-container padding if navbar is not shown here */
}

/* === PLAN CARDS (plans.html) === */
.plans-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); /* Responsive grid */
    gap: 2rem; /* Space between cards */
    margin-top: 2rem;
    margin-bottom: 2rem;
}

.plan-card {
    background-color: var(--background-body); /* Slightly off-white for contrast with content-card */
    border: 1px solid var(--border-color-light);
    border-radius: var(--border-radius-lg);
    padding: 2rem;
    text-align: center;
    box-shadow: var(--card-shadow-light);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Pushes button to the bottom */
}

.plan-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--card-shadow);
}

.plan-card h2 {
    color: var(--primary-color);
    margin-top: 0;
    margin-bottom: 1rem;
    font-size: 1.75rem;
}

.plan-card .price {
    font-size: 1.5rem;
    color: var(--text-primary);
    margin-bottom: 1.5rem;
    font-weight: bold;
}

.plan-card .features {
    list-style: none;
    padding: 0;
    margin-bottom: 2rem;
    text-align: left;
    color: var(--text-secondary);
    flex-grow: 1; /* Allows list to take available space, pushing button down */
}

.plan-card .features li {
    margin-bottom: 0.75rem;
    padding-left: 1.5em; /* Indent for pseudo-element */
    position: relative;
}

.plan-card .features li::before {
    content: '✓'; /* Checkmark icon */
    color: var(--success-main);
    position: absolute;
    left: 0;
    font-weight: bold;
}

/* Ensure buttons within plan cards take full width if specified by .w-100 */
.plan-card .btn.w-100 {
    display: block; /* Or ensure parent flex settings allow full width */
}

/* === UTILITY CLASSES === */
.text-center { text-align: center !important; }
.text-left { text-align: left !important; }
.text-right { text-align: right !important; }

.mt-1 { margin-top: 0.25rem !important; }
.mt-2 { margin-top: 0.5rem !important; }
.mt-3 { margin-top: 1rem !important; }
.mt-4 { margin-top: 1.5rem !important; }
.mt-5 { margin-top: 3rem !important; }

.mb-1 { margin-bottom: 0.25rem !important; }
.mb-2 { margin-bottom: 0.5rem !important; }
.mb-3 { margin-bottom: 1rem !important; }
.mb-4 { margin-bottom: 1.5rem !important; }
.mb-5 { margin-bottom: 3rem !important; }

.ml-auto { margin-left: auto !important; }
.mr-auto { margin-right: auto !important; }
.mx-auto { margin-left: auto !important; margin-right: auto !important; }

.d-block { display: block !important; }
.d-flex { display: flex !important; }
.d-inline-block { display: inline-block !important; }
.d-none { display: none !important; }

.justify-content-center { justify-content: center !important; }
.justify-content-between { justify-content: space-between !important; }
.justify-content-end { justify-content: flex-end !important; }

.align-items-center { align-items: center !important; }
.align-items-start { align-items: flex-start !important; }
.align-items-end { align-items: flex-end !important; }

.flex-column { flex-direction: column !important; }
.flex-grow-1 { flex-grow: 1 !important; }

.w-100 { width: 100% !important; }
.mw-100 { max-width: 100% !important; }

.gap-1 { gap: 0.25rem !important; }
.gap-2 { gap: 0.5rem !important; }
.gap-3 { gap: 1rem !important; }
.gap-4 { gap: 1.5rem !important; }
.gap-5 { gap: 3rem !important; }

/* === RESPONSIVE ADJUSTMENTS === */
@media (max-width: 768px) {
    .navbar .brand-title {
        font-size: 1.4rem;
    }
    .navbar {
        padding: 0.75rem 1rem;
    }
    .main-container {
        padding-top: 60px; /* Adjust if navbar height changes significantly */
    }
    .content-card {
        padding: 1.25rem 1.5rem;
        margin-top: 1.5rem;
    }
    .btn {
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
    }
    .form-control {
        padding: 0.5rem 0.75rem;
        font-size: 0.9rem;
    }
}

@media (max-width: 576px) {
    .navbar .user-info {
        gap: 0.5rem;
    }
    #userEmailDisplay {
        font-size: 0.8rem;
        max-width: 100px; /* Prevent email from taking too much space */
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
    .navbar a.nav-link-button {
        padding: 0.3rem 0.6rem;
        font-size: 0.8rem;
    }
    .content-card h1, .content-card h2, .content-card h3 {
        font-size: 1.4rem; /* Adjust heading sizes for small screens */
    }
    .button-group {
        flex-direction: column;
        align-items: stretch;
    }
    .button-group .btn {
        width: 100%;
    }
    .button-group .btn + .btn {
        margin-top: 0.5rem; /* Add space between stacked buttons */
    }
}